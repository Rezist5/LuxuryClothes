"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCart: function() { return /* binding */ addToCart; },\n/* harmony export */   confirmDelivery: function() { return /* binding */ confirmDelivery; },\n/* harmony export */   createDiscount: function() { return /* binding */ createDiscount; },\n/* harmony export */   createOrder: function() { return /* binding */ createOrder; },\n/* harmony export */   createProduct: function() { return /* binding */ createProduct; },\n/* harmony export */   createReview: function() { return /* binding */ createReview; },\n/* harmony export */   deleteDiscount: function() { return /* binding */ deleteDiscount; },\n/* harmony export */   deleteProduct: function() { return /* binding */ deleteProduct; },\n/* harmony export */   deleteReview: function() { return /* binding */ deleteReview; },\n/* harmony export */   fetchCart: function() { return /* binding */ fetchCart; },\n/* harmony export */   fetchCategories: function() { return /* binding */ fetchCategories; },\n/* harmony export */   fetchCategoryProducts: function() { return /* binding */ fetchCategoryProducts; },\n/* harmony export */   fetchDiscounts: function() { return /* binding */ fetchDiscounts; },\n/* harmony export */   fetchFavorites: function() { return /* binding */ fetchFavorites; },\n/* harmony export */   fetchOrder: function() { return /* binding */ fetchOrder; },\n/* harmony export */   fetchOrders: function() { return /* binding */ fetchOrders; },\n/* harmony export */   fetchProduct: function() { return /* binding */ fetchProduct; },\n/* harmony export */   fetchProducts: function() { return /* binding */ fetchProducts; },\n/* harmony export */   fetchUser: function() { return /* binding */ fetchUser; },\n/* harmony export */   fetchUserPurchases: function() { return /* binding */ fetchUserPurchases; },\n/* harmony export */   fetchUserSales: function() { return /* binding */ fetchUserSales; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   register: function() { return /* binding */ register; },\n/* harmony export */   removeFromCart: function() { return /* binding */ removeFromCart; },\n/* harmony export */   resetPassword: function() { return /* binding */ resetPassword; },\n/* harmony export */   searchProducts: function() { return /* binding */ searchProducts; },\n/* harmony export */   sendPasswordResetLink: function() { return /* binding */ sendPasswordResetLink; },\n/* harmony export */   toggleFavorite: function() { return /* binding */ toggleFavorite; },\n/* harmony export */   updateCartItem: function() { return /* binding */ updateCartItem; },\n/* harmony export */   updateDiscount: function() { return /* binding */ updateDiscount; },\n/* harmony export */   updateProduct: function() { return /* binding */ updateProduct; },\n/* harmony export */   updateProfile: function() { return /* binding */ updateProfile; },\n/* harmony export */   updateReview: function() { return /* binding */ updateReview; },\n/* harmony export */   uploadPaymentProof: function() { return /* binding */ uploadPaymentProof; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// В начале файла добавим проверку\nconst API_URL = \"http://localhost:8000/api\" || 0;\nconst BASE_URL = API_URL.replace(\"/api\", \"\");\n// Функция для получения CSRF токена\nasync function getCsrfToken() {\n    await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/sanctum/csrf-cookie\"), {\n        withCredentials: true\n    });\n}\n// Создаем экземпляр axios с базовыми настройками\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n    },\n    withCredentials: true\n});\n// Добавляем интерцептор для получения CSRF-токена перед запросами\napi.interceptors.request.use(async (config)=>{\n    if (!document.cookie.includes(\"XSRF-TOKEN\") && config.method !== \"get\" && config.method !== \"head\") {\n        await getCsrfToken();\n    }\n    return config;\n});\n// Интерцептор для обработки ошибок\napi.interceptors.response.use((response)=>response, (error)=>{\n    var _error_response, _error_response1;\n    console.error(\"API Error:\", {\n        config: error.config,\n        response: (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data,\n        status: (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status\n    });\n    return Promise.reject(error);\n});\n// Экспортируем функции для работы с API\nasync function login(email, password) {\n    try {\n        const { data } = await api.post(\"/login\", {\n            email,\n            password\n        });\n        return data;\n    } catch (error) {\n        console.error(\"Login error details:\", error);\n        throw error;\n    }\n}\nasync function register(data) {\n    const response = await api.post(\"/register\", data);\n    return response.data;\n}\nconst logout = async ()=>{\n    try {\n        var _document_querySelector;\n        await api.post(\"/logout\", {}, {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": (_document_querySelector = document.querySelector('meta[name=\"csrf-token\"]')) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.getAttribute(\"content\")\n            },\n            withCredentials: true\n        });\n        // Очищаем локальное состояние\n        localStorage.removeItem(\"user\");\n        return true;\n    } catch (error) {\n        console.error(\"Logout error:\", error);\n        throw error;\n    }\n};\nconst fetchUser = async ()=>{\n    try {\n        const response = await api.get(\"/me\");\n        console.log(\"Fetched user data:\", response.data); // Для отладки\n        return response.data.user; // Убедимся, что возвращаем правильную структуру данных\n    } catch (error) {\n        console.error(\"Error fetching user:\", error);\n        throw error;\n    }\n};\n// Products\nconst fetchProducts = async (filters)=>{\n    const queryString = filters ? \"?\".concat(new URLSearchParams(filters).toString()) : \"\";\n    const { data } = await api.get(\"/products\".concat(queryString));\n    return data;\n};\nconst fetchProduct = async (id)=>{\n    try {\n        const { data } = await api.get(\"/products/\".concat(id));\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching product:\", error);\n        throw error;\n    }\n};\nconst createProduct = async (productData)=>{\n    try {\n        // Сначала получаем CSRF токен\n        await getCsrfToken();\n        const { data } = await api.post(\"/products\", productData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return data;\n    } catch (error) {\n        console.error(\"Error creating product:\", error);\n        throw error;\n    }\n};\nconst updateProduct = async (id, productData)=>{\n    const { data } = await api.post(\"/products/\".concat(id), productData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    });\n    return data;\n};\nconst deleteProduct = async (id)=>{\n    const { data } = await api.delete(\"/products/\".concat(id));\n    return data;\n};\n// Search\nconst searchProducts = async (query)=>{\n    const { data } = await api.get(\"/search?q=\".concat(encodeURIComponent(query)));\n    return data;\n};\n// Categories\nconst fetchCategories = async (params)=>{\n    const queryString = params ? \"?\".concat(new URLSearchParams(params).toString()) : \"\";\n    const { data } = await api.get(\"/categories\".concat(queryString));\n    return data;\n};\nconst fetchCategoryProducts = async (slug)=>{\n    const { data } = await api.get(\"/categories/\".concat(slug, \"/products\"));\n    return data;\n};\n// Cart\nconst fetchCart = async ()=>{\n    const { data } = await api.get(\"/cart\");\n    return data;\n};\nconst addToCart = async function(productId) {\n    let quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n    const { data } = await api.post(\"/cart/add\", {\n        product_id: productId,\n        quantity\n    });\n    return data;\n};\nconst updateCartItem = async (cartItemId, quantity)=>{\n    const { data } = await api.put(\"/cart/\".concat(cartItemId), {\n        quantity\n    });\n    return data;\n};\nconst removeFromCart = async (cartItemId)=>{\n    const { data } = await api.delete(\"/cart/\".concat(cartItemId));\n    return data;\n};\n// Orders\nconst fetchOrders = async ()=>{\n    const { data } = await api.get(\"/orders\");\n    return data;\n};\nconst createOrder = async (orderData)=>{\n    const { data } = await api.post(\"/orders\", {\n        ...orderData,\n        items: await fetchCart().then((items)=>items.map((item)=>({\n                    product_id: item.product.id,\n                    quantity: item.quantity\n                })))\n    });\n    return data;\n};\n// Favorites\nconst fetchFavorites = async ()=>{\n    const { data } = await api.get(\"/favorites\");\n    return data;\n};\nconst toggleFavorite = async (productId)=>{\n    const { data } = await api.post(\"/products/\".concat(productId, \"/favorite\"));\n    return data;\n};\n// Reviews\nconst createReview = async (productId, reviewData)=>{\n    const { data } = await api.post(\"/products/\".concat(productId, \"/reviews\"), reviewData);\n    return data;\n};\nconst updateReview = async (reviewId, reviewData)=>{\n    const { data } = await api.put(\"/reviews/\".concat(reviewId), reviewData);\n    return data;\n};\nconst deleteReview = async (reviewId)=>{\n    const { data } = await api.delete(\"/reviews/\".concat(reviewId));\n    return data;\n};\n// Discounts\nconst fetchDiscounts = async ()=>{\n    const { data } = await api.get(\"/admin/discounts\");\n    return data;\n};\nconst createDiscount = async (discountData)=>{\n    const { data } = await api.post(\"/admin/discounts\", discountData);\n    return data;\n};\nconst updateDiscount = async (id, discountData)=>{\n    const { data } = await api.put(\"/admin/discounts/\".concat(id), discountData);\n    return data;\n};\nconst deleteDiscount = async (id)=>{\n    const { data } = await api.delete(\"/admin/discounts/\".concat(id));\n    return data;\n};\n// Добавим новые методы\nconst fetchUserSales = async ()=>{\n    const { data } = await api.get(\"/user/sales\");\n    return data;\n};\nconst fetchUserPurchases = async ()=>{\n    const { data } = await api.get(\"/user/purchases\");\n    return data;\n};\nconst updateProfile = async (data)=>{\n    try {\n        // Преобразуем FormData в объект для отправки\n        const formDataObj = {};\n        data.forEach((value, key)=>{\n            // Пропускаем пустые значения\n            if (value !== \"\" && value !== null && value !== undefined) {\n                formDataObj[key] = value;\n            }\n        });\n        console.log(\"Sending data:\", formDataObj); // Для отладки\n        const response = await api.put(\"/profile\", formDataObj);\n        // Для отладки\n        console.log(\"Server response:\", response.data);\n        // Обновляем кэш пользователя\n        await api.get(\"/me\");\n        return response.data;\n    } catch (error) {\n        console.error(\"Profile update error:\", error);\n        throw error;\n    }\n};\nconst sendPasswordResetLink = async (email)=>{\n    try {\n        var _document_querySelector;\n        const response = await api.post(\"/forgot-password\", {\n            email,\n            _token: (_document_querySelector = document.querySelector('meta[name=\"csrf-token\"]')) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.getAttribute(\"content\")\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Password reset error:\", error);\n        throw error;\n    }\n};\nconst resetPassword = async (data)=>{\n    const response = await api.post(\"/reset-password\", data);\n    return response.data;\n};\nconst uploadPaymentProof = async (orderId, data)=>{\n    const response = await api.post(\"/orders/\".concat(orderId, \"/payment\"), data, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    });\n    return response.data;\n};\nconst confirmDelivery = async (orderId)=>{\n    const response = await api.post(\"/orders/\".concat(orderId, \"/delivery\"));\n    return response.data;\n};\nconst fetchOrder = async (orderId)=>{\n    const response = await api.get(\"/orders/\".concat(orderId));\n    return response.data;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});